#!/bin/bash

# Configurazione globale
BIT_ENC=2048
CA_NAME="S4T"
EXPIRATION=18250
BASE_DIR=$(pwd)
TARGET_DIR="/etc/ssl/iotronic"
CLIENTS=()

# Funzione per stampare messaggi di errore
function error_message {
    echo -e "\e[31m[ERROR]\e[0m $1"
}

# Funzione per stampare messaggi di informazione
function info {
    echo -e "\e[34m[INFO]\e[0m $1"
}

# Funzione per stampare messaggi di successo
function success {
    echo -e "\e[32m[SUCCESS]\e[0m $1"
}

# Funzione per chiedere azione tramite scelta numerica
function numeric_choice {
    echo -e "\e[33m[WARNING]\e[0m Il $2 '$1' esiste già. Scegli un'opzione:"
    echo "1) Sovrascrivere"
    echo "2) Saltare"
    echo "3) Visualizzare"
    while true; do
        read -p "Inserisci il numero dell'opzione desiderata: " choice
        case $choice in
            1) return 0 ;;  # Sovrascrivere
            2) return 1 ;;  # Saltare
            3) 
                if [ "$2" == "file" ]; then
                    cat "$1"
                else
                    ls -l "$1"
                fi
                ;;
            *) echo "Opzione non valida. Scegli 1, 2 o 3." ;;
        esac
    done
}

# Funzione per creare la root CA
function create_ca {
    info "Creazione della Root CA..."
    CA_DIR="${BASE_DIR}/CA"

    if [ -d "$CA_DIR" ]; then
        numeric_choice "$CA_DIR" "directory" || return
        rm -rf "$CA_DIR"
    fi

    mkdir -p "$CA_DIR"

    # Genera la chiave della root CA
    openssl genrsa -out "${CA_DIR}/${CA_NAME}_CA.key" $BIT_ENC || error_message "Errore nella generazione della chiave CA"
    openssl rsa -in "${CA_DIR}/${CA_NAME}_CA.key" -check || error_message "La verifica della chiave CA è fallita"

    # Genera il certificato della root CA
    openssl req -x509 -new -nodes -key "${CA_DIR}/${CA_NAME}_CA.key" -sha256 -days $EXPIRATION \
        -subj "/C=IT/O=$CA_NAME" -out "${CA_DIR}/${CA_NAME}_CA.pem" || error_message "Errore nella generazione del certificato CA"
    openssl x509 -in "${CA_DIR}/${CA_NAME}_CA.pem" -text -noout || error_message "Errore nella verifica del certificato CA"

    # Copia la CA nella directory di destinazione
    mkdir -p "${TARGET_DIR}/CA"
    cp "${CA_DIR}/${CA_NAME}_CA.key" "${CA_DIR}/${CA_NAME}_CA.pem" "${TARGET_DIR}/CA/" || error_message "Errore nella copia della root CA"

    success "Root CA creata e copiata in ${TARGET_DIR}/CA/"
}

# Funzione per creare un certificato client
function create_client_cert {
    CLIENT_CN="$1"
    info "Creazione del certificato per il client: $CLIENT_CN..."
    CLIENT_DIR="${BASE_DIR}/client_${CLIENT_CN}"
    CA_DIR="${BASE_DIR}/CA"

    if [ -d "$CLIENT_DIR" ]; then
        numeric_choice "$CLIENT_DIR" "directory" || return
        rm -rf "$CLIENT_DIR"
    fi

    mkdir -p "$CLIENT_DIR"

    # Genera la chiave del client
    openssl genrsa -out "${CLIENT_DIR}/${CLIENT_CN}.key" $BIT_ENC || error_message "Errore nella generazione della chiave del client"

    # Genera la richiesta di certificato del client
    openssl req -new -days $EXPIRATION -subj "/C=IT/O=$CA_NAME/CN=$CLIENT_CN" \
        -key "${CLIENT_DIR}/${CLIENT_CN}.key" -out "${CLIENT_DIR}/${CLIENT_CN}.csr" || error_message "Errore nella generazione della CSR del client"
    openssl req -text -noout -verify -in "${CLIENT_DIR}/${CLIENT_CN}.csr" || error_message "Errore nella verifica della CSR del client"

    # Firma la richiesta con la root CA
    openssl x509 -req -in "${CLIENT_DIR}/${CLIENT_CN}.csr" -CA "${CA_DIR}/${CA_NAME}_CA.pem" \
        -CAkey "${CA_DIR}/${CA_NAME}_CA.key" -CAcreateserial -out "${CLIENT_DIR}/${CLIENT_CN}.pem" \
        -days $EXPIRATION -sha256 || error_message "Errore nella firma del certificato client"
    openssl x509 -in "${CLIENT_DIR}/${CLIENT_CN}.pem" -text -noout || error_message "Errore nella verifica del certificato client"

    chmod 644 "${CLIENT_DIR}/${CLIENT_CN}.key" || error_message "Errore nell'impostazione dei permessi della chiave"

    # Copia i file nella directory di destinazione
    CLIENT_TARGET_DIR="${TARGET_DIR}/client_${CLIENT_CN}"
    mkdir -p "$CLIENT_TARGET_DIR"
    cp "${CLIENT_DIR}/${CLIENT_CN}.key" "${CLIENT_DIR}/${CLIENT_CN}.pem" "$CLIENT_TARGET_DIR/" || error_message "Errore nella copia dei file del client"
    cp "${CA_DIR}/${CA_NAME}_CA.pem" "$CLIENT_TARGET_DIR/CA.pem" || error_message "Errore nella copia del certificato CA per il client"

    success "Certificato client per $CLIENT_CN creato e copiato in $CLIENT_TARGET_DIR/"
}

# Funzione principale
function main {
    info "Inizio del processo..."

    # Creazione della root CA
    create_ca

    # Creazione dei certificati client
    for CLIENT_CN in "${CLIENTS[@]}"; do
        create_client_cert "$CLIENT_CN"
    done

    success "Processo completato."
}

# Parsing dei parametri
if [ "$#" -lt 1 ]; then
    echo -e "\e[33m[USO]\e[0m $0 <CLIENT-CN> [ALTRI-CLIENT-CN...]"
    exit 1
fi

# Aggiungi tutti i client specificati alla lista
CLIENTS=("$@")

# Esegui lo script principale
main
